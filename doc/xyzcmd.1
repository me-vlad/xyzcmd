.TH XYZCMD 1 "29 August 2010" Linux
.SH NAME
xyzcmd \- pure console visual file manager.
.SH SYNOPSIS
.B xyzcmd
[\-d driver] [\-c colors] [\-s skin] [\-lvh]
.SH DESCRIPTION
XYZCommander is a pure console visual file manager.

Main features include:
.TP
.B *
Tight integration with python run–time system — most of the settings can be
changed "on the fly" using management console.
.TP
.B *
Powerful configuration system - define own actions, aliases, internal
commands, key bindings.
.TP
.B *
Extensible plug-in system - even core functionality implemented mainly
using plug–ins, keeping base system small and clean.
.TP
.B *
Events & hooks subsystem - a flexible way of reacting on certain system events.
.TP
.B *
Customizable look-n-feel - every widget component look can be changed
using skins.
.TP
.B *
Unicode support.
.TP
.B *
VFS subsystem.
.TP
.B *
Tabs in navigation panels.
.SH OPTIONS
.TP
.B \-d driver
Display driver to use:
.I raw (default)
|
.I curses
.TP
.B \-c colors
Number of colors terminal supports:
.I 1
|
.I 16 (default)
|
.I 88
|
.I 256
.TP
.B \-s skin
Skin name to use.
.TP
.B \-l
Show available skins.
.TP
.B \-v
Show program version.
.TP
.B \-h
Show short usage help.
.SH Keyboard shortcuts
.I CTRL-x
means pressing
.I Control
and
.I x
at the same time.

.I META-x
means pressing
.I META (Alt)
and
.I x
at the same time.

.I META-X
means pressing
.I META (Alt)
and
.I SHIFT
and
.I x
at the same time.

.I Active panel
is the focused panel, where selecting cursor appears.

.I Inactive panel
is the opposite of active panel.

It is possible to extend a shortcuts namespace by defining a prefix key.
When prefix key is defined and pressed later on, the system will wait for
another key to complete the two-level shortcut.

The shortcuts
.I META-r
\- show list of all current keybindings and
.I META-t
\- show list of all active plugins and their methods
can both be very useful when dealing with shortcuts.

Default keyboard shortcuts are read from
.I /usr/share/xyzcmd/conf/keys.xyz
file.
All of the standard shortcuts can be overriden (as well as new ones created)
in
.I ~/.xyzcmd/conf/keys.xyz
file.

.PP
.I ENTER (RETURN)
.IP
If the command line is not empty \-
execute the command in shell (:sys:cmd:execute), otherwise
lookup up for the appropriate action and perform it (:sys:panel:action).
.PP
.I META-p
.IP
Insert into command line previously executed command (:sys:cmd:history_prev).
.PP
.I META-n
.IP
Insert into command line the next executed command from the
history (if any) (:sys:cmd:history_next).
.PP
.I BACKSPACE
.IP
Delete one character in cmd to the left of the cursor (:sys:cmd:del_char_left).
.PP
.I CTRL-d
.IP
Delete one character in cmd under the cursor (:sys:cmd:del_char).
.PP
.I META-u
.IP
Delete one word in cmd to the left of the cursor (:sys:cmd:del_word_left).
.PP
.I META-k
.IP
Delete one word in cmd to the right of the cursor (:sys:cmd:del_word_right).
.PP
.I CTRL-p
.IP
Clear the command line (:sys:cmd:clear).
.PP
.I CTRL-u
.IP
Clear the command line to the left of the cursor (:sys:cmd:clear_left).
.PP
.I CTRL-k
.IP
Clear the command line to the right of the cursor (:sys:cmd:clear_right).
.PP
.I CTRL-a
.IP
Move cursor to the beginning of the command line (:sys:cmd:cursor_begin).
.PP
.I CTRL-e
.IP
Move cursor to the end of the command line (:sys:cmd:cursor_end).
.PP
.I CTRL-b
.IP
Move cursor one character left (:sys:cmd:cursor_left).
.PP
.I CTRL-f
.IP
Move cursor one character right (:sys:cmd:cursor_right).
.PP
.I META-b
.IP
Move cursor one word left (:sys:cmd:cursor_word_left).
.PP
.I META-f
.IP
Move cursor one word right (:sys:cmd:cursor_word_right).
.PP
.I CTRL-x u
.IP
Undo one destructive operation (:sys:cmd:undo).
.PP
.I META-h
.IP
Show history of typed commands window (:sys:cmd:show_history).
.PP
.I CTRL-x ENTER
.IP
Put the name of the selected object into command line
(:sys:cmd:put_active_object).
.PP
.I META-q
.IP
Put the full path of the selected object into command line
(:sys:cmd:put_active_object_path).
.PP
.I CTRL-n
.IP
Put the name of the selected object in inactive panel into command line
(:sys:cmd:put_inactive_object).
.PP
.I CTRL-s
.IP
Put the full path of the selected object in inactive panel into command line
(:sys:cmd:put_inactive_object_path).
.PP
.I CTRL-x p
.IP
Put the current working directory path in inactive panel into command line
(:sys:cmd:put_inactive_cmd).
.PP
.I CTRL-x a
.IP
Put the current working directory path in into command line
(:sys:cmd:put_active_cmd).
.PP
.I DOWN
.IP
Move the selecting cursor in panel down (:sys:panel:entry_next).
.PP
.I UP
.IP
Move the selecting cursor in panel up (:sys:panel:entry_prev).
.PP
.I HOME
.IP
Move to the topmost entry in the panel (:sys:panel:entry_top).
.PP
.I END
.IP
Move to the last entry in the panel (:sys:panel:entry_bottom).
.PP
.I TAB
.IP
Switch active panel (:sys:panel:switch_active).
.PP
.I PAGE_DOWN, RIGHT
.IP
Move the cursor one block down (:sys:panel:block_next).
.PP
.I PAGE_UP, LEFT
.IP
Move the cursor one block up (:sys:panel:block_prev).
.PP
.I INSERT
.IP
Toggle tag on selected object (:sys:panel:toggle_tag).
.PP
.I META-a
.IP
Tag all objects in panel (:sys:panel:tag_all).
.PP
.I META-A
.IP
Untag all objects in panel (:sys:panel:untag_all).
.PP
.I META-i
.IP
Invert tag on selected object in panel (:sys:panel:tag_invert).
.PP
.I META-+
.IP
Show dialog for tagging objects using FSRule (:sys:panel:tag_rule).
.PP
.I META-/
.IP
Show dialog for untagging objects using FSRule (:sys:panel:untag_rule).
.PP
.I CTRL-w
.IP
Swap active and inactive panels (:sys:panel:swap_blocks).
.PP
.I CTRL-r
.IP
Reload active panel contents (:sys:panel:reload).
.PP
.I META-s
.IP
Search for an object in cycle (:sys:panel:search_cycle).
.PP
.I META-w
.IP
Search for an object backwards (:sys:panel:search_backward).
.PP
.I META-g
.IP
Filter out untagged objects in panel (:sys:panel:show_tagged).
Press
.I CTRL-r
to exit from this view.
.PP
.I CTRL-x d
.IP
Tag objects in active panel which are missing from the inactive one
(:sys:panel:tag_diff).
.PP
.I CTRL-c c
.IP
Create new tab in the active panel (:sys:panel:new_tab).
.PP
.I CTRL-c d
.IP
Delete current tab in the active panel (:sys:panel:del_tab).
.PP
.I CTRL-c n
.IP
Switch to the next tab in the active panel (:sys:panel:next_tab).
.PP
.I CTRL-c p
.IP
Switch to the previous tab in the active panel (:sys:panel:prev_tab).
.PP
.I CTRL-c 0
.IP
Switch to the tab #0 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c 1
.IP
Switch to the tab #1 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c 2
.IP
Switch to the tab #2 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c 3
.IP
Switch to the tab #3 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c 4
.IP
Switch to the tab #4 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c 5
.IP
Switch to the tab #5 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c 6
.IP
Switch to the tab #6 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c 7
.IP
Switch to the tab #7 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c 8
.IP
Switch to the tab #8 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c 9
.IP
Switch to the tab #9 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c C
.IP
Create new tab in the inactive panel (:sys:panel:new_tab).
.PP
.I CTRL-c D
.IP
Delete current tab in the inactive panel (:sys:panel:del_tab).
.PP
.I CTRL-c N
.IP
Switch to the next tab in the inactive panel (:sys:panel:next_tab).
.PP
.I CTRL-c P
.IP
Switch to the previous tab in the inactive panel (:sys:panel:prev_tab).
.PP
.I CTRL-c )
.IP
Switch to the tab #0 in the inactive panel (:sys:panel:switch_tab).
.PP
.I CTRL-c !
.IP
Switch to the tab #1 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c @
.IP
Switch to the tab #2 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c #
.IP
Switch to the tab #3 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c $
.IP
Switch to the tab #4 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c %
.IP
Switch to the tab #5 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c ^
.IP
Switch to the tab #6 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c &
.IP
Switch to the tab #7 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c *
.IP
Switch to the tab #8 in the active panel (:sys:panel:switch_tab).
.PP
.I CTRL-c (
.IP
Switch to the tab #9 in the active panel (:sys:panel:switch_tab).
.PP
.I META-l
.IP
Show logger console window.
.PP
.I CTRL-l
.IP
Repaint the screen, removing possible artifacts.
.PP
.I META-t
.IP
Show list of available active plugins.
.PP
.I META-y
.IP
Show learning keys dialog.
.PP
.I META-r
.IP
Show list of all current shortcut bindings.
.PP
.I META-c
.IP
Show management console window.
.PP
.I META-TAB
.IP
Try to auto-complete current cmd contents.
.PP
.I META-e
.IP
Show input test dialog.
.PP
.I META-\e
.IP
Show bookmarks window.
.PP
.I CTRL-x b
.IP
Add current working directory path to bookmarks.
.PP
.I F2
.IP
Show VFS object information.
.PP
.I F3
.IP
Run system PAGER on selected object.
.PP
.I F4
.IP
Run system EDITOR on selected object.
.PP
.I F5
.IP
Show copy dialog.
.PP
.I F7
.IP
Show creating new directory dialog.
.PP
.I F8
.IP
Show removing dialog.
.PP
.I F10
.IP
Show exit confirmation window.
.PP
.I META-o
.IP
Show about dialog.

.SH Standard icmds
icmds are internal commands, they do not get passed to the shell,
instead appropriate function is being called by XYZCommander.

Default icmds are read from
.I /usr/share/xyzcmd/conf/icmd.xyz
file.
One can create custom icmds in
.I ~/.xyzcmd/conf/icmd.xyz

.PP
.I cd [<path>]
.IP
Change directory to <path>. Note, that path is XYZCommander's 
full VFS path, that is not only on local file system, but also
all the supported VFS subsystems as well.

For instance, executing command:
.I cd /tmp/archive.tar#vfs-tar#/inside/dir-inside
will enter the /inside/dir-inside directory inside the /tmp/archive.tar
file (providing it does exist, of course).

cd without path will bring you to user's home dir.

.I ~
character is replaced with user's home dir in the path.

.PP
.I alias
.IP
Show list of XYZCommander aliases as well as parent shell's ones
(if setup_shell option of plugin :core:shell is set to True and
the current shell is supported by alias-discovery subsystem).
.PP
.I exit
.IP
Just silently exit XYZCommander.

.SH FILES
.PP
.I /usr/share/xyzcmd/conf/actions.xyz
.IP
System actions.
.PP
.I /usr/share/xyzcmd/conf/aliases.xyz
.IP
System aliases.
.PP
.I /usr/share/xyzcmd/conf/hooks.xyz
.IP
System events hooks.
.PP
.I /usr/share/xyzcmd/conf/icmd.xyz
.IP
System internal command definitions.
.PP
.I /usr/share/xyzcmd/conf/keys.xyz
.IP
System shortcuts.
.PP
.I /usr/share/xyzcmd/conf/main.xyz
.IP
System configuration file.
.PP
.I /usr/share/xyzcmd/conf/plugins.xyz
.IP
System plugins configuration.
.PP
.I /usr/share/xyzcmd/conf/vfs.xyz
.IP
System VFS susbsystem configuration.
.PP
.I /usr/share/xyzcmd/skins/*
.IP
Default system skins.

.PP
.I ~/.xyzcmd/conf/actions.xyz
.IP
User actions.
.PP
.I ~/.xyzcmd/conf/aliases.xyz
.IP
User aliases.
.PP
.I ~/.xyzcmd/conf/hooks.xyz
.IP
User events hooks.
.PP
.I ~/.xyzcmd/conf/icmd.xyz
.IP
User internal command definitions.
.PP
.I ~/.xyzcmd/conf/keys.xyz
.IP
User shortcuts.
.PP
.I ~/.xyzcmd/conf/main.xyz
.IP
Main configuration file.
.PP
.I ~/.xyzcmd/conf/plugins.xyz
.IP
User plugins configuration.
.PP
.I ~/.xyzcmd/conf/vfs.xyz
.IP
User VFS susbsystem configuration.
.PP
.I ~/.xyzcmd/data/*
.IP
Arbitrary user data saved by plugins.
.SH AUTHOR
Max E. Kuznecov <mek@mek.uz.ua>
.SH "SEE ALSO"
.BR mc (1)
