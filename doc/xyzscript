script: statements
        ;

statements:   statement
            | expressions
            | statements
            ;

statement: set_statement
           | proc_statement
           | if_statement
           | for_statement
           | loop_statement
           ;

expressions: expression
             | expression expressions
             ;

expression: call_expression
           | value_expression
           | "(" expression ")"
           | expression operator expression
           ;

operator: "+"
          | "-"
          | "="
          | "*"
          | "/"
          ;

## Expressions

call_expression: "call" IDENTIFIER "(" proc_formal_arguments ")"

value_expression: variable_value
                  | string_value
                  | interger_value
                  | list_value
                  | map_value
                  | anon_proc_value
                  | boolean_value
                  | null_value
                  | shortcut_value
                  ;

variable_value: IDENTIFIER
                ;

string_value: STRING
              ;

interger_value: NUMBER
                ;

list_value: "[" list_elements "]"
            ;

list_elements: expression
               | expression "," expression
               ;

map_value: "{" map_elements "}"
           ;

map_elements: kv_pair
              | kv_pair "," kv_pair
              ;

kv_pair: IDENTIFIER "=" expression
         ;

anon_proc_value: "proc" "(" proc_formal_arguments ")"
                  "begin" procedure_body "endproc"
                  ;

proc_formal_arguments: IDENTIFIER
                       | IDENTIFIER "," proc_formal_arguments
                       | E
                       ;

procedure_body: statements
                ;

boolean_value: "true"
               | "false"
               ;

null_value: "null"
            ;

shortcut_value: "![" shortcut_keys "]"
                ;

shortcut_keys: shortcut_key
               | shortcut_key shortcut_keys
               ;

shortcut_key: ???
              ;

## Statements

set_statement: "set" IDENTIFIER expression
               ;

proc_statement "proc" IDENTIFIER "(" proc_formal_arguments ")"
               "begin" procedure_body "endproc"
               ;

if_statement: "if" expression "begin" statements
              elif_branches
              else_branch
              "endif"
              ;

elif_branches: elif_branch
               | elif_branch elif_branches
               | E
               ;

elif_branch: "elif" expression "begin" statements
             | E
             ;
              
else_branch: "else" "begin" statements
             | E;


loop_statement: "loop" expression "begin" loop_body "endloop"
                ;

loop_body: statements
           | "break"
           | "continue"
           ;

for_statement: "for" IDENTIFIER "in" expression "begin" loop_body "endfor"
               ;
